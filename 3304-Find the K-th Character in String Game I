//C++
class Solution {
public:
string word ="a";
    char kthCharacter(int k) {
        getWord(k);
        cout<<word;
    return word[k-1];
    }
    void getWord(int k){
        if(k<=1){
            return;
        }else{
            int i=0;
            string temp;
            while(word[i] !='\0'){
                temp.append(1,word[i]+1);
                i++;
                k--;
            }
            word.append(temp);
            getWord(k);
        }
    }
};

//PHP
class Solution {

    public $word = "a";

    /**
     * @param Integer $k
     * @return String
     */
    function kthCharacter($k) {
        $this->getWord($k);
        echo $this->word . "\n";
        return $this->word[$k - 1];
    }

    function getWord($k) {
        while (strlen($this->word) < $k) {
            $temp = "";
            for ($i = 0; $i < strlen($this->word); $i++) {
                $temp .= chr(ord($this->word[$i]) + 1);
            }
            $this->word .= $temp;
        }
    }
}
//Python
class Solution:
    def __init__(self):
        self.word = "a"

    def kthCharacter(self, k: int) -> str:
        self.getWord(k)
        print(self.word)
        return self.word[k - 1]

    def getWord(self, k: int):
        while len(self.word) < k:
            temp = ""
            for i in range(len(self.word)):
                temp += chr(ord(self.word[i]) + 1)
            self.word += temp
//Javascript
/**
 * @param {number} k
 * @return {character}
 */
var word = "a";
var kthCharacter = function (k) {
    getWord(k)
    console.log(word)
    return word[k - 1];
};
function getWord(k) {
    while (word.length < k) {
        var temp = "";
        for (let i = 0; i < word.length; i++) {
            temp += String.fromCharCode(word.charCodeAt(i) + 1);
        }
        word += temp
    }
}

